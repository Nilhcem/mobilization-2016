[{
	"description": "We will welcome you with hot espresso, danish pastry and your conference badge.",
	"duration": 60,
	"id": 1,
	"roomId": 0,
	"startAt": "2016-09-16 08:00",
	"title": "Breakfast & Registration"
}, {
	"description": "Opening of this day of droidcon Vienna",
	"duration": 15,
	"id": 2,
	"roomId": 0,
	"startAt": "2016-09-16 09:00",
	"title": "Welcome"
}, {
	"description": "Google offers a terrific number of cloud-based mobile services under the brand Firebase.\nFollow Laurence Moroney, Developer Advocate at Google, on this journey through the Firebase universe which makes the live of Android developers easier.",
	"duration": 60,
	"id": 3,
	"roomId": 1,
	"speakersId": [1],
	"startAt": "2016-09-16 09:15",
	"title": "Keynote"
}, {
	"description": "How would you like 2 extra hours of your time back every week? All mobile app developers face similar workflows as they work to upload an app to Google Play. Many of these processes are currently done manually, but why not automate them? Fabric’s set of developer tools, collectively called fastlane, makes building, testing, and releasing your app faster, reproducible and less troublesome, leaving developers more time to focus on feature code and not deployment! Learn how you can automate the tedious tasks to generate release notes, screenshots and push your final submission Google Play portal effortlessly from your command line with a powerful open source tool. github.com/fastlane/fastlane/",
	"duration": 60,
	"id": 4,
	"roomId": 1,
	"speakersId": [2],
	"startAt": "2016-09-16 10:15",
	"title": "Supercharging your Android app release with fastlane"
}, {
	"description": "Android TV is a growing platform which provides some great opportunities for developers to craft exciting applications users can enjoy from the comfort of their armchairs. However, documentation for the platform is sparse - so in this session we'll be looking at how we can create Android TV apps with the help of Google's leanback library, with the aim to educate both developers AND designers on what is possible both out-of-the box and with our own crafting! After a brief introduction to the TV platform and an open-source Vine TV app I've built (Vineyard), we'll move straight into how you can begin building applications for yourself using the leanback library and the different components that it provides - ensuring that you're following best practices along the way. We'll take a look at the different components that are provided by the framework and how you can craft custom components of your own to enhance your applications UX. Seeing as Android TV applications are completely testable, we'll also take a brief look at how this can be done to ensure your app functions as expected!",
	"duration": 60,
	"id": 5,
	"roomId": 2,
	"speakersId": [21],
	"startAt": "2016-09-16 10:15",
	"title": "Android TV: Building Apps with Google's LeanBack Library"
}, {
	"description": "The best time to talk with speakers and attendees",
	"duration": 15,
	"id": 6,
	"roomId": 0,
	"startAt": "2016-09-16 11:15",
	"title": "Coffee Break"
}, {
	"description": "The Kotlin programming language is gaining popularity amongst the Android developer community. It’s a modern language that gives more power in everyday routines. Kotlin code generally looks cleaner and nicer, and it’s much easier to work with when you have less verbosity or code duplication. And this is especially noticeable comparing with the soon-to-be-archaic versions of Java used on Android. But what’s even more important, is that Kotlin is 100% compatible with all existing Java frameworks, and has good tooling in Android Studio and IntelliJ IDEA. It’s a pragmatic language with a very low learning curve, and can be quickly grasped by Java developers. In this talk we’ll discuss the concepts of the language that provide the desired expressiveness, as well as additional goodies designed specifically for Android.",
	"duration": 60,
	"id": 7,
	"roomId": 1,
	"speakersId": [11],
	"startAt": "2016-09-16 11:30",
	"title": "You can do better with Kotlin"
}, {
	"description": "Whether your app is a pet project or has millions of users, you probably need the right tools, during the development, to help you modify persisted data in real time, simulate a slow/unstable HTTP(s) connection, detect bugs as fast as possible, or create mock servers to anticipate the development of a feature.\nWe will make a demonstration of all the tools we use, in 2016, to write maintainable code and improve our productivity.",
	"duration": 60,
	"id": 8,
	"roomId": 2,
	"speakersId": [3],
	"startAt": "2016-09-16 11:30",
	"title": "The 2016 Android Developer Toolbox"
}, {
	"duration": 90,
	"id": 9,
	"roomId": 0,
	"startAt": "2016-09-16 12:30",
	"title": "Lunch Break"
}, {
	"description": "8 years since Android’s been released we finally have a proper Google-supported solution for testing in the Testing Support Library. We’ll go through the various stages of it, explore it’s (not so) hidden features and learn how to use it to build better apps. We will cover things such as (breaking the) test Rules, (outrunning the) test Runners and how to make most of tools such as Espresso & the Cloud Test Lab.",
	"duration": 60,
	"id": 10,
	"roomId": 1,
	"speakersId": [5],
	"startAt": "2016-09-16 14:00",
	"title": "Android Testing Support Library: The Nitty Gritty"
}, {
	"description": "We introduce Android Auto, yet another way to connect your smartphone to the car, and compare it with other solutions. By presenting the Android Auto APIs with current features and restrictions as well as the development workflow and toolset the audience will have the necessary input to start coding. When we first heard about Android Auto, we had visions of an awesome smartphone/car integration in mind. Unfortunately the current use cases for apps are limited to music and texting and we have no access to vehicle data (e.g. GPS position, speed, engine type). The development of Android Auto apps is straightforward for the given use cases and your music or texting app can be easily extended to the Android Auto context. Nevertheless we found some pitfalls that we would like to share. Android Auto is bleeding edge: APIs, development tools, etc. are changing fast, documentation is rare and toolkits are still unstable. Testing the app on real car head units is difficult. The fast update cycles of the Android Auto OS with new features during the last couple of months raise our hopes, that the APIs will be extended to more interesting uses cases very soon.",
	"duration": 60,
	"id": 11,
	"roomId": 2,
	"speakersId": [12, 13],
	"startAt": "2016-09-16 14:00",
	"title": "Developing Apps for Android Auto"
}, {
	"description": "On this year's IO Google announced Daydream, a new way of integrating your apps with Virtual Reality. To prepare the audience for those new changes, I'll explain the current situation of the VR on Android by live coding two apps: An app using Unity to produce an App on Android and IOS, but also show how to write a simple photosphere app, written in pure Java, emphasising the differences and similarities between both SDKs. After showing how to easily write Cardboard Apps, I'll introduce Daydream, and how this specification changes the usage of the SDK and how to use the simulated, or real controller.",
	"duration": 60,
	"id": 12,
	"roomId": 3,
	"speakersId": [20],
	"startAt": "2016-09-16 14:00",
	"title": "Virtual Reality in Android: Daydreaming about Cardboards"
}, {
	"description": "Smartphones have become an extension of the user, allowing them to buy stuff, pay for services and hold a strong social presence. This places strict demands on security and data privacy. If you want your users to be comfortable using your app, you must place emphasis on utilising the security methods at your disposal. This talk will cover the best practices in app security, demonstrate common mistakes and pitfalls and show what we’ve learned in our own experience in the mobile banking industry.",
	"duration": 60,
	"id": 13,
	"roomId": 1,
	"speakersId": [10],
	"startAt": "2016-09-16 15:00",
	"title": "Safety first – best practices in app security"
}, {
	"description": "The paper metaphor, bright colors and print like typography are what make Material design beautiful. What really lets it shine though is motion! While it's not hard to animate single Android UI components, it becomes harder when these components and their animations shall depend on each other. With CoordinatorLayout the official Android Design Support Library provides a powerful, top-level UI component to make these highly dynamic dependencies easily manageable. This session wants to cover what's possible out of the box using CoordinatorLayout together with some other widgets and latest additions of the Design Support Library and also aims to provide deeper insights of how it actually works. The talk will explain the basic concepts it is build on as well as its apis that developers can use to build their own ui behaviors. After the talk you will be able to define complex dependencies between your ui components and make your app shine without cluttering your activities/fragmentsviews with animation code or losing your mind in animation listener hell.",
	"duration": 60,
	"id": 14,
	"roomId": 2,
	"speakersId": [22],
	"startAt": "2016-09-16 15:00",
	"title": "Are you coordinating already?"
}, {
	"description": "Developing Augmented Reality apps for Android - Pokemon Go brought Augmented Reality to the hands of millions of users. In this session Wikitude unveils the secrets of how to build an app like Pokemon Go and shares all the possibilities Augmented Reality can bring to Android devs.",
	"duration": 60,
	"id": 15,
	"roomId": 3,
	"speakersId": [24],
	"startAt": "2016-09-16 15:00",
	"title": "Build the next Pokemon Go"
}, {
	"description": "The best time to talk with speakers and attendees",
	"duration": 15,
	"id": 16,
	"roomId": 0,
	"startAt": "2016-09-16 16:00",
	"title": "Coffee Break"
}, {
	"description": "Very few concepts shook up the Android world as MVP and Dagger 2 did. MVP gave us a long-awaited clean architecture in Android apps, while Dagger 2 brought it to a whole new level by removing all the boilerplate code that we don't like writing. In this talk, I will demonstrate the benefits of the MVP architecture and its reusability and scalability. I’ll go over Dagger’s role in MVP as well as unit testing, and show how to focus on creating reusable modules on a concrete example.",
	"duration": 60,
	"id": 17,
	"roomId": 1,
	"speakersId": [6],
	"startAt": "2016-09-16 16:15",
	"title": "Building a maintainable app using MVP and Dagger 2"
}, {
	"description": "Realm: A fast and secure database for Android, which is easy to learn and integrate.\nHave you heard good things about Realm and considered replacing SQLite or ORM with Realm?\nDo you know that with tons of advantages, Realm also brings some limitations?\nHave you faced thread handling issues with Realm?\nIf yes, we will discuss different integration approaches of Realm and best practices to follow, along with RxJava, Retrofit, Dagger, Annotations & MVP.",
	"duration": 60,
	"id": 18,
	"roomId": 2,
	"speakersId": [18],
	"startAt": "2016-09-16 16:15",
	"title": "Safe vs Deep integration of Realm in Android"
}, {
	"description": "Deliver private, secure apps with ease\nMobile phones have become central to our private lives, full of intimate messages, private pictures, and a huge amount of details of our personal lives.  Our experience of using mobile software feels very private: when we look at our mobile screens, it feels like no one else can see what we are seeing.  Unfortunately, information can easily leak out in so many different ways, making it difficult for app developers to deliver on this implicit promise made to users.\nFor companies, it is clear that data can be very lucrative business.  It is also increasingly apparent that having too much data about users can destroy your business if that information gets hacked and dumped onto the internet.\nBuilding apps that can securely contain private can be hard to do, but it does not have to be.  Guardian Project's central goal is to make it as easy as possible.  We take cutting edge security research and bundle it up into free, easy to use libraries.  These libraries make it very easy to protect precious data on the device and over the internet.  These libraries use APIs that developers already know (e.g. android.database.*, java.io.*) so the ramp up time for developers is really fast.  This workshop will give an overview of our suite of libraries, including SQLCipher-for-Android, private file stores, and hardened network connections.  Then we will help you start incorporating them in your own apps, providing a wealth of examples including sample code, real world apps that use these libraries, and UI/UX patterns that work well.",
	"duration": 60,
	"id": 19,
	"roomId": 3,
	"speakersId": [25],
	"startAt": "2016-09-16 16:15",
	"title": "Private Development Made Easy"
}, {
	"description": "Let's face it - the more successful a product is, the more complex it becomes. New features are pulled into the backlog, bugs pile up like candy on Halloween and deadlines move from \"We need it Tomorrow\" to \"It had to be done last week!\". As a result teams grow, new ones emerge and a once small and simple app overpasses the dex limit and requires 300 seconds for a cold build (if you're lucky, of course). At ${company_name} we value quality, but we also require speed and a continues delivery that should never stop. With seven+ teams contributing to the main app the risk of breaking the stability of the project is even higher. Thus a clean and straight forward architecture is key for a successful rollout and our QAs sanity. This talk is about our journey from a one-block app (with a twisted maze of legacy code on top), to a multi modular and sustainable project consisting of small semi-autonomous components that assemble into our flagship app. Almost like a jigsaw puzzle.",
	"duration": 60,
	"id": 20,
	"roomId": 1,
	"speakersId": [16],
	"startAt": "2016-09-16 17:15",
	"title": "Scaling Android Apps - how I learned to love the puzzle"
}, {
	"description": "In this talk, we will see how we can re-use the DevOps methodology in an Android context. We will begin with a quick overview of a good continuous integration on Android. Then, we will see what tools we can use to implement such a process with a particular focus on testing. We will also explore the API implemented by Google to allow developers to interact with the console Play Store and therefore be able to automate deliveries. At the end of this talk, we will have a full pipeline to deploy from one git push to a production release.",
	"duration": 60,
	"id": 21,
	"roomId": 2,
	"speakersId": [19],
	"startAt": "2016-09-16 17:15",
	"title": "DevOps on Android: From one git push to a Play Store release"
}, {
	"description": "With Google Play Services 7.8, released in August 2015, Google introduced the Nearby API. This API makes use of an array of technologies like Wifi, Bluetooth, Beacons and even audio to communicate with nearby objects like bus stops, train platforms or even indoor locations like a museum. There are a lot of possibilities for using the Nearby API, for example creating a local Multiplayer game where people nearby can join a game without internet connection, or a smart bus stop that tells you when your bus is delayed and provides entertainment while you wait. The use cases are almost endless. This talk will touch the Nearby Messages API, the Nearby Locations API and the (eddystone) beacon technology.",
	"duration": 60,
	"id": 22,
	"roomId": 3,
	"speakersId": [4],
	"startAt": "2016-09-16 17:15",
	"title": "Nearby API - I'm lost, let's see what's nearby!"
}, {
	"description": "Closing this conference day",
	"duration": 15,
	"id": 23,
	"roomId": 0,
	"startAt": "2016-09-16 18:15",
	"title": "Closing"
}, {
	"description": "Time to network and relax - join us at the Café Alias for free beer & wine",
	"duration": 180,
	"id": 24,
	"roomId": 0,
	"startAt": "2016-09-16 19:00",
	"title": "Afterparty"
}, {
	"description": "We will welcome you with hot espresso, danish pastry and your conference badge.",
	"duration": 15,
	"id": 25,
	"roomId": 0,
	"startAt": "2016-09-17 09:00",
	"title": "Breakfast & Registration"
}, {
	"description": "Opening of this day of droidcon Vienna",
	"duration": 15,
	"id": 26,
	"roomId": 0,
	"startAt": "2016-09-17 09:15",
	"title": "Welcome"
}, {
	"description": "User authentication is one of the most important parts of mobile applications. Still, many developers are often overwhelmed by the challenge that is posed by integrating multiple identity providers, implementing user-friendly username-password flows, and storing this data securely across a multitude of devices.\nIn this talk Tim will cover principles of good user authentication that can support developers in implementing a compelling UI, password-less login systems built on open standards and various functionalities within Android, that allow for signing-in users automatically.",
	"duration": 60,
	"id": 27,
	"roomId": 1,
	"speakersId": [17],
	"startAt": "2016-09-17 09:30",
	"title": "User Authentication designed for 2016 and beyond"
}, {
	"description": "This will be an impromptu talk by cketti, very much influenced by the audience!",
	"duration": 60,
	"id": 28,
	"roomId": 2,
	"speakersId": [9],
	"startAt": "2016-09-17 09:30",
	"title": "Something about Intents and URI permissions"
}, {
	"description": "For years crash handling was one of the worst parts of the Android development process. With each new crash you were risking a lot - getting bad Google Play reviews, negative comments and dissatisfied customers. Nobody likes the \"Unfortunately, your app has crashed\" dialog, but there was only so much you could do about it, beside logging the crash to a remote server. In the last couple of months a lot has changed. We've been introduced to brand new tools to help us cope with this problem. During this talk, we'll demonstrate how to use several tools and techniques that have made our lives easier. We'll discuss different ways of predicting crashes even before they occur by means of static code checkers, automatic tests and CI setup. Additionally, we'll show you how to detect memory leaks, explain advanced exception and crash logging by using a combination of several different tools. Finally, we’ll demonstrate how to provide a better crash experience or hide the crash altogether if the crash is simply inevitable!",
	"duration": 60,
	"id": 29,
	"roomId": 1,
	"speakersId": [8],
	"startAt": "2016-09-17 10:30",
	"title": "Crash Wars: The handling awakens"
}, {
	"description": "Xamarin is a Cross-Platform Framework that allows developers to build mobile applications for iOS, Android and Windows using .NET and C#. From a single language mobile developers can leverage the power of C# and a single codebase to build and maintain their apps for all of the above three platforms. This talk gives an introduction of Xamarin and how Android developers can use it to develop apps not only for Android but easily add other platforms to it.",
	"duration": 60,
	"id": 30,
	"roomId": 2,
	"speakersId": [23],
	"startAt": "2016-09-17 10:30",
	"title": "Xamarin for Android Developers"
}, {
	"description": "The best time to talk with speakers and attendees",
	"duration": 15,
	"id": 31,
	"roomId": 0,
	"startAt": "2016-09-17 11:30",
	"title": "Coffee Break"
}, {
	"description": "You have tons of custom getters in your model classes to avoid getting null values where you don’t want them? Multiple null-checks for one effective line of code? And what’s about all the clumsy binding of views from your XML-layouts? Maybe you already accepted all that and more as part of building an Android app. But there is hope! With the fresh release of Kotlin 1.0 in February 2016 the JetBrains team gave Android developers a wonderful modern language to build their apps in a more concise, more readable and more stable way. And I will show you how to use the powers of Kotlin for your next Android project.",
	"duration": 60,
	"id": 32,
	"roomId": 1,
	"speakersId": [15],
	"startAt": "2016-09-17 11:45",
	"title": "The Blessings of Kotlin for Android"
}, {
	"description": "Model-View-Presenter (MVP) architecture is widely used in today’s Android apps to separate the view from the view logic and the model by introducing a presenter. Model-View-ViewModel (MVVM) is quite similar to MVP, with the view model acting as an enhanced presenter, using a data binder to keep the view model and the view in sync. By binding the view to view model properties, the data binder can handle view updates, without the need to manually set changed data back to the view (e.g. no more setText() or setVisibility() on a TextView). As with the presenter in MVP, the view model can easily be unit tested. This talk gives an introduction to the MVVM architecture and how it can be used on Android with the data binding library.",
	"duration": 60,
	"id": 33,
	"roomId": 2,
	"speakersId": [14],
	"startAt": "2016-09-17 11:45",
	"title": "MVVM architecture with the data binding library"
}, {
	"description": "Get your feet wet using Firebase by following the Firebase codelab! In this codelab, you'll learn how to use the Firebase platform to easily create Android applications. You will implement a chat client and be able to monitor its performance using Firebase.",
	"duration": 30,
	"id": 34,
	"roomId": 1,
	"speakersId": [17, 1],
	"startAt": "2016-09-17 12:45",
	"title": "Firebase Codelab"
}, {
	"description": "At PSPDFKit we're building, maintaining and evolving a large PDF framework (for viewing and editing) with more than 500 Java classes, and an even bigger number of classes in native C++ code. Iterating quickly, we try to keep up a bi-weekly release cycle – along with a lot of refactorings to keep control of the code. After almost two years we are looking back at a journey of testing. With more than 700 distinctive instrumentation tests (including unit tests, screenshot tests, UI integration tests), a full test run would take about 40 minutes and we use a lot of tricks to keep the turnaround time low. The talk will outline several of the issues that we encountered (method count limits in library test APKs, Espresso test flakiness, slow execution speeds of instrumentation tests, etc.) and how we managed to overcome them.",
	"duration": 30,
	"id": 35,
	"roomId": 2,
	"speakersId": [7],
	"startAt": "2016-09-17 12:45",
	"title": "Why testing an Android framework is different?"
}, {
	"duration": 75,
	"id": 36,
	"roomId": 0,
	"startAt": "2016-09-17 13:15",
	"title": "Lunch Break"
}, {
	"duration": 30,
	"id": 37,
	"roomId": 1,
	"startAt": "2016-09-17 14:30",
	"title": "Give your App a REPL (Jason Feinstein)"
}, {
	"duration": 30,
	"id": 38,
	"roomId": 2,
	"startAt": "2016-09-17 14:30",
	"title": "Developing an Android Library (Dino Kovac)"
}, {
	"duration": 30,
	"id": 39,
	"roomId": 1,
	"startAt": "2016-09-17 15:00",
	"title": "RxJava Best Practices (Kavya Hebbani)"
}, {
	"duration": 30,
	"id": 40,
	"roomId": 2,
	"startAt": "2016-09-17 15:00",
	"title": "Acceptance Tests and Android with Fitnesse (Maurice Wohlkönig)"
}, {
	"description": "The best time to talk with speakers and attendees",
	"duration": 30,
	"id": 41,
	"roomId": 0,
	"startAt": "2016-09-17 15:30",
	"title": "Coffee Break"
}, {
	"duration": 30,
	"id": 42,
	"roomId": 1,
	"startAt": "2016-09-17 16:00",
	"title": "Consistent Data Source using RxJava for MVP (Carmelo Iriti)"
}, {
	"duration": 30,
	"id": 43,
	"roomId": 1,
	"startAt": "2016-09-17 16:30",
	"title": "Test driven development and MVP (Tim Schonberger)"
}, {
	"duration": 30,
	"id": 44,
	"roomId": 1,
	"speakersId": [3],
	"startAt": "2016-09-17 17:00",
	"title": "Android Wear - Improve your Android skills (Gautier Mechling)"
}, {
	"duration": 30,
	"id": 45,
	"roomId": 1,
	"startAt": "2016-09-17 17:30",
	"title": "A Beginners Guide to Annotation Processing (Jason Feinstein)"
}, {
	"description": "Closing this conference day",
	"duration": 15,
	"id": 46,
	"roomId": 0,
	"startAt": "2016-09-17 18:00",
	"title": "Closing"
}]
